package com.thejadetower.ryan.howcanihelp;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.auth.api.Auth;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.auth.api.signin.GoogleSignInResult;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.SignInButton;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.OptionalPendingResult;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.Status;

public class SignInActivity extends FragmentActivity implements
        GoogleApiClient.OnConnectionFailedListener,
        View.OnClickListener{


    private static final String TAG = "SignInActivity";
    //This is the request code for a google sign in.
    private static final int RC_SIGN_IN = 9001;

    private GoogleApiClient mGoogleApiClient;
    private User user;
    private MyApp app;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        user = new User();
        User.user = user;
        app = new MyApp();
        MyApp.app = app;

        setContentView(R.layout.activity_sign_in);

        findViewById(R.id.google_sign_in_button).setOnClickListener(this);
        findViewById(R.id.guest_sign_in_button).setOnClickListener(this);

        //GoogleSignInOptions are passed to the API when we sign in
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN).build();
        //Need this API Client to sign in
        mGoogleApiClient = new GoogleApiClient.Builder(this)
                .enableAutoManage(this /* FragmentActivity */, this /* OnConnectionFailedListener */)
                .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
                .build();
    }

    @Override
    public void onStart(){
        super.onStart();

        //Attempt to sign in, works if we have signed in before
        OptionalPendingResult<GoogleSignInResult> opr = Auth.GoogleSignInApi.silentSignIn(mGoogleApiClient);
        if(opr.isDone()){
            GoogleSignInResult result = opr.get();
            handleSignInResult(result);
        }else{

        }
    }

    @Override
    protected void onResume(){
        super.onResume();
    }

    //This function is called automatically by the activity we started
    //Using startActivityForResult(requestCode,resultCode, Intent)
    //The requestCode is the requestCode we passed the activity
    //result is either resultCode.RESULT_OK or RESULT_CANCELLED
    //Intent is the data we were returned
    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if(resultCode == 0){
            Log.d("test", "test");
        }

        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);
        if (requestCode == RC_SIGN_IN) {
            //Built in function with googleSignIn API that lets us get results this way
            GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
            handleSignInResult(result);
        }
    }

    private void handleSignInResult(GoogleSignInResult result){
        Log.d(TAG, "handleSignInResult:" + result.isSuccess());
        if (result.isSuccess()) {
            user.signIn(result.getSignInAccount());
            openMap();
        } else {
            Toast.makeText(this, "Sign in unssuccessful",Toast.LENGTH_LONG).show();
        }
    }

    public void onConnectionFailed(ConnectionResult result){
        Toast.makeText(getApplicationContext(), "Failed to Connect", Toast.LENGTH_LONG).show();
    }

    private void signIn() {
        //Calls onActivityResult when the google sign in activity resolves
        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
        startActivityForResult(signInIntent, RC_SIGN_IN);
    }

    private void openMap(){
        Intent intent = new Intent(this, MapsActivity.class);
        finish();
        startActivity(intent);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.google_sign_in_button:
                signIn();
                break;
            case R.id.guest_sign_in_button:
                openMap();
                break;
        }
    }
}
